#!/usr/bin/env bash

DAS_PYTHONPATH=`python -c "import os, DAS; print os.path.dirname(DAS.__file__)"`
QUERIES_FILE="$DAS_PYTHONPATH/services/bootstrap_queries/cms_bootstrap_queries_1r.txt"


# check number of input arguments
usage="Usage: `basename $0` [--only-if-needed] [--wipe-all]"
helpmsg="  This script bootstraps external data needed for keyword search"
E_BADARGS=65
if [ $# -eq 1 ]; then
    if  [ "$1" == "-h" ] || [ "$1" == "-help" ] || [ "$1" == "--help" ]; then
        echo $usage
        echo $helpmsg
        exit
    fi
fi


# make sure mongodb is alive (otherwhile das_cli wont start...)
echo "Waiting for DB"
python $DAS_PYTHONPATH/tools/das_waitfordb.py
if [ $? -ne 0 ]; then
    echo "DB is down for too long. Can not continue"
    exit 1
fi


if [ $# -eq 1 ]; then
   if  [ "$1" == "--only-if-needed" ]; then
        echo "Checking if bootstrap is mandatory"
        BOOTSTR_NEEDED=`python -c "from DAS.tools.das_waitfordb import is_bootstrap_needed; print (is_bootstrap_needed())"`
        if [ "$BOOTSTR_NEEDED" -ne "1" ]; then
            echo 'Bootstrap is not mandatory. exiting...'
            exit

        else
            # TODO: shall we sleep in a loop
            sleep 10
        fi

    fi
fi



# Clean up only if requested
if [ $# -eq 1 ]; then
   if  [ "$1" == "--wipe-all" ]; then
        # TODO: keylearning is not used anywhere now, but is it OK in future?
        mongo --port 8230 keylearning --eval "db.db.remove(); db.db.find();"

        # TODO: do not wipe cache & merge cols. currently keylearning uses only first few records...
        mongo --port 8230 das --eval "db.cache.remove(); db.merge.remove();"
    fi
fi

while read query; do
    #n=`expr $n + 1`
    # run a query

    echo "Running Query: ${query}"
    das_cli --no-output -q "$query"

    # while the results are still in raw cache, update the registry about service result structure
    python -u  $DAS_PYTHONPATH/analytics/standalone_task.py -c key_learning

done < $QUERIES_FILE

# it's OK for KWS to be unavailable for a short period...

# remove result_field_index
rm -Rf $DAS_KWS_IR_INDEX/*
# reload the fields index
python -u  $DAS_PYTHONPATH/analytics/standalone_task.py -c update_result_field_index

# Bootstrap values (release, datatype, etc)
# TODO: shall this be part of (KWS) webserver?
python $DAS_PYTHONPATH/keywordsearch/metadata/input_values_tracker.py